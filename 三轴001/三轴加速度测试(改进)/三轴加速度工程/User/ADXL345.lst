C51 COMPILER V9.57.0.0   ADXL345                                                           08/29/2019 09:37:51 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ADXL345
OBJECT MODULE PLACED IN .\ADXL345.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HardWare\ADXL345.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Func;..
                    -\HardWare;..\User) DEBUG OBJECTEXTEND PRINT(.\ADXL345.lst) TABS(2) OBJECT(.\ADXL345.obj)

line level    source

   1          /******************************
   2          ****ADXL345读写操作.c文件******
   3          ******************************/
   4          #include "ADXL345.h"
   5          #include "Delay.h"
   6          #include "LED.h"
   7          uint Buffer[8];
   8          void ADXL345_Start()
   9          {
  10   1          SDA = 1;                    //拉高数据线
  11   1          SCL = 1;                    //拉高时钟线
  12   1          Delay5us();                 //延时
  13   1          SDA = 0;                    //产生下降沿
  14   1          Delay5us();                 //延时
  15   1          SCL = 0;                    //拉低时钟线
  16   1      }
  17          
  18          void ADXL345_Stop()
  19          {
  20   1          SDA = 0;                    //拉低数据线
  21   1          SCL = 1;                    //拉高时钟线
  22   1          Delay5us();                 //延时
  23   1          SDA = 1;                    //产生上升沿
  24   1          Delay5us();                 //延时
  25   1      }
  26          
  27          void ADXL345_SendACK(bit ack)
  28          {
  29   1          SDA = ack;                  //写应答信号
  30   1          SCL = 1;                    //拉高时钟线
  31   1          Delay5us();                 //延时
  32   1          SCL = 0;                    //拉低时钟线
  33   1          Delay5us();                 //延时
  34   1      }
  35          
  36          bit ADXL345_RecvACK()
  37          {
  38   1          SCL = 1;                    //拉高时钟线
  39   1          Delay5us();                 //延时
  40   1          CY = SDA;                   //读应答信号
  41   1          SCL = 0;                    //拉低时钟线
  42   1          Delay5us();                 //延时
  43   1      
  44   1          return CY;
  45   1      }
  46          
  47          void ADXL345_SendByte(uchar dat)
  48          {
  49   1          uchar i;
  50   1        for (i=0; i<8; i++)         //8位计数器
  51   1          {
  52   2              dat <<= 1;              //移出数据的最高位
  53   2              SDA = CY;               //送数据口
  54   2              SCL = 1;                //拉高时钟线
C51 COMPILER V9.57.0.0   ADXL345                                                           08/29/2019 09:37:51 PAGE 2   

  55   2              Delay5us();             //延时
  56   2              SCL = 0;                //拉低时钟线
  57   2              Delay5us();             //延时
  58   2          }
  59   1          ADXL345_RecvACK();
  60   1      }
  61          
  62          uchar ADXL345_RecvByte()
  63          {
  64   1          uchar i;
  65   1          uchar dat = 0;
  66   1      
  67   1          SDA = 1;                    //使能内部上拉,准备读取数据,
  68   1          for (i=0; i<8; i++)         //8位计数器
  69   1          {
  70   2              dat <<= 1;
  71   2              SCL = 1;                //拉高时钟线
  72   2              Delay5us();             //延时
  73   2              dat |= SDA;             //读数据               
  74   2              SCL = 0;                //拉低时钟线
  75   2              Delay5us();             //延时
  76   2          }
  77   1          return dat;
  78   1      }
  79          
  80          void Single_Write_ADXL345(uchar REG_Address,uchar REG_data)
  81          {
  82   1          ADXL345_Start();                  //起始信号
  83   1          ADXL345_SendByte(SlaveAddress);   //发送设备地址+写信号
  84   1          ADXL345_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
  85   1          ADXL345_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
  86   1          ADXL345_Stop();                   //发送停止信号
  87   1      }
  88          
  89          uchar Single_Read_ADXL345(uchar REG_Address)
  90          {  uchar REG_data;
  91   1          ADXL345_Start();                          //起始信号
  92   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
  93   1          ADXL345_SendByte(REG_Address);                   //发送存储单元地址，从0开始  
  94   1          ADXL345_Start();                          //起始信号
  95   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
  96   1          REG_data=ADXL345_RecvByte();              //读出寄存器数据
  97   1        ADXL345_SendACK(1);   
  98   1        ADXL345_Stop();                           //停止信号
  99   1          return REG_data; 
 100   1      }
 101          void Init_ADXL345()
 102          {
 103   1         Single_Write_ADXL345(0x31,0x0B);   //测量范围,正负16g，13位模式
 104   1         Single_Write_ADXL345(0x2C,0x0a);   //速率设定为12.5 参考pdf13页
 105   1         Single_Write_ADXL345(0x2D,0x08);   //选择电源模式   参考pdf24页
 106   1         Single_Write_ADXL345(0x2E,0x80);   //使能 DATA_READY 中断
 107   1      }
 108          void Multiple_Read_ADXL345(void)
 109          {  
 110   1        uchar i;
 111   1          ADXL345_Start();                          //起始信号
 112   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 113   1          ADXL345_SendByte(0x32);                   //发送存储单元地址，从0x32开始  
 114   1          ADXL345_Start();                          //起始信号
 115   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 116   1        for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
C51 COMPILER V9.57.0.0   ADXL345                                                           08/29/2019 09:37:51 PAGE 3   

 117   1          {
 118   2              Buffer[i] = ADXL345_RecvByte();          //BUF[0]存储0x32地址中的数据
 119   2              if (i == 5)
 120   2              {
 121   3                 ADXL345_SendACK(1);                //最后一个数据需要回NOACK
 122   3              }
 123   2              else
 124   2              {
 125   3                ADXL345_SendACK(0);                //回应ACK
 126   3             }
 127   2         }
 128   1          ADXL345_Stop();                          //停止信号
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    322    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     16       9
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
